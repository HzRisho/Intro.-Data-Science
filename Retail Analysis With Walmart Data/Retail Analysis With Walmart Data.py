# -*- coding: utf-8 -*-
"""Retail Analysis With Walmart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yRixZ6H6Sw1FAIoHOelQeWMndH6gravn
"""

#Import required libraries and dataset

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime

df= pd.read_csv(r'/content/walmart-sales-dataset-of-45stores.csv')
print(df.to_string)

#Which store has maximum sales? Store-20
total_sales=df.groupby('Store')['Weekly_Sales'].sum().sort_values(ascending=False)
print(total_sales.head(1))

#Which store has maximum standard deviation? Store-14
df_std=df.groupby('Store')['Weekly_Sales'].std().sort_values(ascending=False)
print(df_std.head(1))

super_Bowl=['12-02-2010', '11-02-2011', '10-02-2012']
Labour_Day=['10-09-2010', '9-09-2011', '7-09-2012']
Thanksgiving=['26-11-2010', '25-11-2011']
Christmas=['31-12-2010', '30-12-2011']

super_Bowl_Sales=df.loc[df.Date.isin(super_Bowl)] ['Weekly_Sales'].mean()
print("super_Bowl_Sales:",super_Bowl_Sales)

Labour_Day_Sales=df.loc[df.Date.isin(Labour_Day)] ['Weekly_Sales'].mean()
print("Labour_Day_Sales:",Labour_Day_Sales)

Thanksgiving_Sales=df.loc[df.Date.isin(Thanksgiving)] ['Weekly_Sales'].mean()
print("Thanksgiving_Sales:",Thanksgiving_Sales)

Christmas_Sales=df.loc[df.Date.isin(Christmas)] ['Weekly_Sales'].mean()
print("Christmas_Sales:",Christmas_Sales,"\n")

non_holiday_sales=df[df['Holiday_Flag']==0] ['Weekly_Sales'].mean()

holidays={'super Bowl':super_Bowl_Sales,
                      'Labour Day':Labour_Day_Sales,
                      'Thanksgiving':Thanksgiving_Sales,
                       'Christmas ':Christmas_Sales,} 

for key, value in holidays.items():
   if value < non_holiday_sales:
     print(key,"have negative impact :(")
   else:
     print(key,"have positive impact :)")

df['Date'] = pd.to_datetime(df['Date'])
df['month'] = df['Date'].dt.month
plt.bar(df['month'] , df['Weekly_Sales'], color='goldenrod')
plt.xlabel('Months')
plt.ylabel('Weekly_Sales')
plt.title('monthly_sales')

#
df['Date'] = pd.to_datetime(df['Date'])
df['Semester']=df['month']
for i in df.Semester:
  if i == 1 or i == 12 or i == 2:
    df['Semester'] = df['Semester'].replace(i, 'Winter')
  elif i == 3 or i == 4 or i == 5:
    df['Semester'] = df['Semester'].replace(i, 'Spring')
  elif i == 6 or i == 7 or i == 8:
    df['Semester'] = df['Semester'].replace(i, 'Summer')
  elif i == 9 or i == 10 or i == 11:
    df['Semester'] = df['Semester'].replace(i, 'Autumn')
S_Sales=df.groupby('Semester')['Weekly_Sales'].sum()
print(S_Sales.to_string())

plt.plot(S_Sales, color='goldenrod', marker='o', linestyle = '-')
plt.show()

plt.plot(df['Weekly_Sales'],df['CPI'],color='midnightblue',marker='o',linestyle='' ,markersize=4)

plt.plot(df['Weekly_Sales'],df['Temperature'],color='teal',marker='o',linestyle='' ,markersize=4)

plt.plot(df['Weekly_Sales'],df['Fuel_Price'],'ko' ,markersize=4)

plt.plot(df['Weekly_Sales'], df['Unemployment'] , color='slategray', marker='o', linestyle='', markersize=4)